[ClassVersion("1.0"), FriendlyName("xCertificateExport")]
class MSFT_xCertificateExport : OMI_BaseResource
{
    [Key,Description("The path to the file you that will contain the exported certificate.")] string Path;
    [Write,Description("Specifies whether the exported certificate should be present or absent."),ValueMap{"Present", "Absent"},Values{"Present", "Absent"}] string Ensure;
    [Write,Description("The thumbprint of the certificate to export.")] string Thumbprint;
    [Write,Description("The friendly name of the certificate to export.")] string FriendlyName;
    [Write,Description("The subject of the certificate to export.")] string Subject;
    [Write,Description("The issuer of the certiicate to export.")] string Issuer;
    [Write,Description("The key usage of the certificate to export must contain these values.")] string KeyUsage[];
    [Write,Description("The enhanced key usage of the certificate to export must contain these values.")] string EnhancedKeyUsage[];
    [Write,Description("The Windows Certificate Store Name to search for the certificate to export from.")] string Store;
    [Write,Description("Allow an expired certificate to be exported.")] boolean AllowExpired;
    [Write,Description("Causes an existing exported certificate to be compared with the certificate identified for export and re-exported if it does not match.")] boolean MatchSource;
    [Write,Description("Specifies the type of certificate to export."),ValueMap{"Cert", "P7B", "SST", "PFX"},Values{"Cert", "P7B", "SST", "PFX"}] string Type;
    [Write,Description("Specifies the options for building a chain when exporting a PFX certificate."),ValueMap{"BuildChain","EndEntityCertOnly"},Values{"BuildChain","EndEntityCertOnly"}] string ChainOption;
    [Write,Description("Specifies the password used to protect an exported PFX file."),EmbeddedInstance("MSFT_Credential")] String Password;
    [Write,Description("Specifies an array of strings for the username or group name that can access the private key of an exported PFX file without any password.")] string ProtectTo[];
};
